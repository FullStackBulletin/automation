AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  fstackbulletin - Generates a draft newsletter for the next week

Parameters:
  CacheDir:
    Type: String
    Description: "Path to the cache directory"
    Default: ".cache"
  MastodonBaseUrl:
    Type: String
    Description: "Mastodon server base URL"
    Default: "https://mastodon.social"
  CloudinaryCloudName:
    Type: String
    Description: "Cloudinary cloud name"
    Default: "loige"
  CloudinaryFolder:
    Type: String
    Description: "Cloudinary folder"
    Default: "fsb"
  S3DataBucketName:
    Type: String
    Description: "S3 bucket name where to store data"
    Default: "fullstackbulletin-data"
  MailchimpListId:
    Type: String
    Description: "Mailchimp list id"
    Default: "55ace33899"
  MailchimpTemplateId:
    Type: String
    Description: "Mailchimp list id"
    Default: "33867"
  MailchimpFromEmail:
    Type: String
    Description: "Mailchimp from email"
    Default: "newsletter@fullstackbulletin.com"
  MailchimpFromName:
    Type: String
    Description: "Mailchimp from name"
    Default: "Fullstack Bulletin"
  MailchimpReplyToEmail:
    Type: String
    Description: "Mailchimp reply to email"
    Default: "admin@fullstackbulletin.com"

Resources:
  CreateIssueStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      DefinitionUri: statemachine/create_issue.asl.yaml
      DefinitionSubstitutions:
        FetchIssueNumberFunctionArn: !GetAtt FetchIssueNumberFunction.Arn
        CreateIssueFunctionArn: !GetAtt CreateIssueFunction.Arn
        FetchQuoteFunctionArn: !GetAtt FetchQuoteFunction.Arn
        FetchBookFunctionArn: !GetAtt FetchBookFunction.Arn
        FetchLinksFunctionArn: !GetAtt FetchLinksFunction.Arn
      Events:
        HourlyTradingSchedule:
          Type: Schedule
          Properties:
            Description: Runs every Friday at 5PM UTC
            Enabled: True
            Schedule: "cron(0 17 ? * FRI *)"
      Policies:
        - LambdaInvokePolicy:
            FunctionName: !Ref FetchIssueNumberFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref CreateIssueFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref FetchQuoteFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref FetchBookFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref FetchLinksFunction

  FetchIssueNumberFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: rust-cargolambda
    Properties:
      CodeUri: functions/fetch-issue-number/
      Handler: bootstrap
      Runtime: provided.al2
      Timeout: 15
      Architectures:
        - arm64
      Environment:
        Variables:
          URL: "https://us15.campaign-archive.com/home/?u=b015626aa6028495fe77c75ea&id=55ace33899"

  FetchQuoteFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: rust-cargolambda
    Properties:
      CodeUri: functions/fetch-quote/
      Handler: bootstrap
      Runtime: provided.al2
      Timeout: 15
      Architectures:
        - arm64

  FetchBookFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/fetch-book/
      Handler: handler.fetchBook
      Runtime: nodejs18.x
      Timeout: 15
      Architectures:
        - x86_64

  FetchLinksFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/fetch-links/
      Handler: handler.fetchLinks
      Runtime: nodejs18.x
      Timeout: 60
      Architectures:
        - x86_64
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref S3DataBucketName
        - SSMParameterWithSlashPrefixReadPolicy:
            ParameterName: /FullstackBulletin/prod/*
      Environment:
        Variables:
          CACHE_DIR: !Ref CacheDir
          MASTODON_BASE_URL: !Ref MastodonBaseUrl
          MASTODON_ACCESS_TOKEN: "{{resolve:ssm:/FullstackBulletin/prod/MastodonAccessToken}}"
          FACEBOOK_APP_ID: "{{resolve:ssm:/FullstackBulletin/prod/FacebookAppId}}"
          FACEBOOK_APP_SECRET: "{{resolve:ssm:/FullstackBulletin/prod/FacebookAppSecret}}"
          UNSPLASH_ACCESS_KEY: "{{resolve:ssm:/FullstackBulletin/prod/UnsplashAccessKey}}"
          CLOUDINARY_CLOUD_NAME: !Ref CloudinaryCloudName
          CLOUDINARY_API_KEY: "{{resolve:ssm:/FullstackBulletin/prod/CloudinaryApiKey}}"
          CLOUDINARY_API_SECRET: "{{resolve:ssm:/FullstackBulletin/prod/CloudinaryApiSecret}}"
          CLOUDINARY_FOLDER: !Ref CloudinaryFolder
          S3_DATA_BUCKET_NAME: !Ref S3DataBucketName

  CreateIssueFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/create-issue/
      Handler: handler.createIssue
      Runtime: nodejs18.x
      Timeout: 60
      Architectures:
        - x86_64
      Policies:
        - SSMParameterWithSlashPrefixReadPolicy:
            ParameterName: /FullstackBulletin/prod/*
      Environment:
        Variables:
          MAILCHIMP_API_KEY: "{{resolve:ssm:/FullstackBulletin/prod/MailchimpApiKey}}"
          MAILCHIMP_LIST_ID: !Ref MailchimpListId
          MAILCHIMP_TEMPLATE_ID: !Ref MailchimpTemplateId
          MAILCHIMP_FROM_EMAIL: !Ref MailchimpFromEmail
          MAILCHIMP_FROM_NAME: !Ref MailchimpFromName
          MAILCHIMP_REPLY_TO_EMAIL: !Ref MailchimpReplyToEmail
          MAILCHIMP_TEST_EMAILS: "{{resolve:ssm:/FullstackBulletin/prod/MailchimpTestEmails}}"

Outputs:
  CreateIssueFunctionArn:
    Description: "Create Issue Function ARN"
    Value: !Ref CreateIssueFunction
